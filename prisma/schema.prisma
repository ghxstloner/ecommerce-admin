// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Tienda {
  id             String       @id @default(uuid())   
  nombre         String                          
  usuarioId      String
  banners        Banner[]     @relation("TiendaToBanner")
  categoria      Categoria[]  @relation("TiendaToCategoria")
  tamano         Tamano[]     @relation("TiendaToTamano")
  color          Color[]      @relation("TiendaToColor")
  producto       Producto[]   @relation("TiendaToProducto") 

  creadoEn       DateTime     @default(now())         
  actualizadoEn  DateTime     @updatedAt
}

model Banner {
  id             String   @id @default(uuid())
  tiendaId       String
  tienda         Tienda   @relation("TiendaToBanner", fields: [tiendaId], references: [id])
  label          String
  imageUrl       String
  categorias     Categoria[]

  creadoEn       DateTime @default(now())
  actualizadoEn  DateTime @updatedAt

  @@index([tiendaId]) 
}

model Categoria {
  id             String @id @default(uuid())
  tiendaId       String
  tienda         Tienda @relation("TiendaToCategoria", fields: [tiendaId], references: [id])
  bannerId       String
  banner         Banner @relation(fields: [bannerId], references: [id])
  nombre         String
  productos      Producto[] @relation("CategoriaToProducto")

  creadoEn       DateTime     @default(now())         
  actualizadoEn  DateTime     @updatedAt

  @@index([tiendaId])
  @@index([bannerId])  
}

model Tamano {
  id             String @id @default(uuid())
  tiendaId       String
  tienda         Tienda @relation("TiendaToTamano",fields: [tiendaId], references: [id])
  nombre         String
  valor          String
  productos      Producto[]

  creadoEn       DateTime @default(now())
  actualizadoEn  DateTime @updatedAt

  @@index([tiendaId])
}

model Color {
  id             String @id @default(uuid())
  tiendaId       String
  tienda         Tienda @relation("TiendaToColor",fields: [tiendaId], references: [id])
  nombre         String
  valor          String
  productos      Producto[]

  creadoEn       DateTime @default(now())
  actualizadoEn  DateTime @updatedAt

  @@index([tiendaId])
}

model Producto {
  id             String @id @default(uuid())
  tiendaId       String
  tienda         Tienda @relation("TiendaToProducto",fields: [tiendaId], references: [id])
  categoriaId    String
  categoria      Categoria @relation("CategoriaToProducto", fields: [categoriaId], references: [id])
  nombre         String
  precio         Decimal
  esDestacado    Boolean  @default(false)
  esArchivado    Boolean  @default(false)
  tamanoId       String
  tamano         Tamano   @relation(fields: [tamanoId], references: [id])
  colorId        String
  color          Color   @relation(fields: [colorId], references: [id])
  imagenes       Imagen[]

  creadoEn       DateTime @default(now())
  actualizadoEn  DateTime @updatedAt

  @@index([tiendaId])
  @@index([categoriaId])
  @@index([tamanoId])
  @@index([colorId])
}

model Imagen {
  id              String @id @default(uuid())
  productoId      String
  producto        Producto @relation(fields: [productoId], references: [id], onDelete: Cascade)
  url             String

  creadoEn        DateTime @default(now())
  actualizadoEn   DateTime @updatedAt

  @@index([productoId])
}